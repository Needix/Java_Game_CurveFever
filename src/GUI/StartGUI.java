/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import CF.*;
import Netzwerk.Client.*;
import Netzwerk.Server.*;
import java.awt.*;
import static java.awt.event.KeyEvent.*;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.*;
import javax.swing.DefaultListModel;

/**
 *
 * @author Need
 */
public class StartGUI extends javax.swing.JFrame {
    ////Konstanten
    //Objekte_Allgemein
    private final ArrayList <CF_Player>player;
    private final Random random;
    private final DefaultListModel<String> dlm_spielerListeS;
    private final DefaultListModel<String> dlm_spielerListeC;
    public final ArrayList<Color> colors = new ArrayList<>();
    private final ArrayList<String> spielerPositionen = new ArrayList<>();
    public StartGUI GUI;
    public JFrame newGUI;
    public CFM_CurveFeverMultiplayer_Client CFM_Client;
    
    
    //Objekte_GUI/Spiel
    private final KeyboardListenerMenu KL_S_L;
    private final KeyboardListenerMenu KL_S_R;
    private final KeyboardListenerMenu KL_C_L;
    private final KeyboardListenerMenu KL_C_R;
    
    //Objekte_Netzwerk
    private Server_Connector SConnector;
    private Server_Sender SSender;
    private final Client_ConnectorSender CConSender;
    
    //Variablen
    
    /**
     * Creates new form GUI
     */
    public StartGUI() {
        colors.add(Color.red);
        colors.add(Color.blue);
        colors.add(Color.green);
        colors.add(Color.yellow);
        colors.add(Color.white);
        colors.add(Color.cyan);
        colors.add(Color.magenta);
        colors.add(Color.gray);
        
        //DefaultListModel
        dlm_spielerListeS = new DefaultListModel<>();
        dlm_spielerListeC = new DefaultListModel<>();
        
        initComponents();
        
        //FocusTraversalPolicy
        FocusTraversalPolicy policy = getFocusTraversal(
        new JComponent[] {tf_name1, tf_name2, tf_name3, tf_name4, tf_name5, tf_name6, tf_name7}); //hier alles eintragen was man focussieren will
        frame_lokal.setFocusTraversalPolicy(policy); //setzen
        frame_lokal.setFocusCycleRoot(true); //enablen
        
        //KeyListener
        KL_S_L = new KeyboardListenerMenu(erstelleServer_toggleb_links);
        KL_S_R = new KeyboardListenerMenu(erstelleServer_toggleb_rechts);
        KL_C_L = new KeyboardListenerMenu(joinServer_toggleb_links);
        KL_C_R = new KeyboardListenerMenu(joinServer_toggleb_rechts);
        erstelleServer_toggleb_links.addKeyListener(KL_S_L);
        erstelleServer_toggleb_rechts.addKeyListener(KL_S_R);
        joinServer_toggleb_links.addKeyListener(KL_C_L);
        joinServer_toggleb_rechts.addKeyListener(KL_C_R);
        
        CConSender = new Client_ConnectorSender(dlm_spielerListeC);
        
        //Init Allgemeine Objekte
        player = new ArrayList<>();
        random = new Random();
        
        //FormOptions
        this.setBounds(10, 0, 280, 220);
        frame_lokal.setBounds(300, 200, 460, 300);
        frame_erstelleServer.setBounds(300, 200, 490, 475);
        frame_serverBeitreten.setBounds(300, 200, 490, 425);
        this.setSize(this.getPreferredSize());
    }

    //<editor-fold defaultstate="collapsed" desc="GUI-Events">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frame_lokal = new javax.swing.JFrame();
        combobox_items = new javax.swing.JComboBox();
        tf_p1l = new javax.swing.JTextField();
        tf_p1r = new javax.swing.JTextField();
        tf_p2l = new javax.swing.JTextField();
        tf_p2r = new javax.swing.JTextField();
        tf_p3l = new javax.swing.JTextField();
        tf_p3r = new javax.swing.JTextField();
        tf_p4l = new javax.swing.JTextField();
        tf_p4r = new javax.swing.JTextField();
        tf_p5l = new javax.swing.JTextField();
        tf_p5r = new javax.swing.JTextField();
        tf_p6l = new javax.swing.JTextField();
        tf_p6r = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        combobox_playerSpeed = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        combobox_necSiege = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        combobox_pausieren = new javax.swing.JComboBox();
        button_lokal_final = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        combobox_gewinnfoto = new javax.swing.JComboBox();
        tf_name1 = new javax.swing.JTextField();
        tf_name2 = new javax.swing.JTextField();
        tf_name3 = new javax.swing.JTextField();
        tf_name4 = new javax.swing.JTextField();
        tf_name5 = new javax.swing.JTextField();
        tf_name6 = new javax.swing.JTextField();
        tf_name7 = new javax.swing.JTextField();
        tf_p7l = new javax.swing.JTextField();
        tf_p7r = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        combobox_startposition = new javax.swing.JComboBox();
        frame_erstelleServer = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        erstelleServer_combobox_playerSpeed = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        erstelleServer_combobox_necSiege = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        erstelleServer_combobox_pausieren = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        erstelleServer_combobox_anzahlSpieler = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        erstelleServer_combobox_items = new javax.swing.JComboBox();
        erstelleServer_button_joinServer = new javax.swing.JButton();
        erstelleServer_tf_port = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        erstelleServer_tf_servername = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        erstelleServer_list_player = new javax.swing.JList();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        erstelleServer_tf_spielername = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        erstelleServer_toggleb_links = new javax.swing.JToggleButton();
        erstelleServer_toggleb_rechts = new javax.swing.JToggleButton();
        erstelleServer_b_start = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel20 = new javax.swing.JLabel();
        erstelleServer_combobox_gewinnfoto = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        erstelleServer_combobox_spielerPositionen = new javax.swing.JComboBox();
        frame_serverBeitreten = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        joinServer_combobox_playerSpeed = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        joinServer_combobox_necWins = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        joinServer_combobox_pausieren = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        joinServer_combobox_anzahlSpieler = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        joinServer_combobox_items = new javax.swing.JComboBox();
        joinServer_button_joinServer = new javax.swing.JButton();
        joinServer_tf_port = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        joinServer_tf_serverip = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        joinServer_list_player = new javax.swing.JList();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        joinServer_tf_spielername = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        joinServer_toggleb_links = new javax.swing.JToggleButton();
        joinServer_toggleb_rechts = new javax.swing.JToggleButton();
        joinServer_b_ready = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        joinServer_combobox_gewinnfoto = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        joinServer_combobox_spielerPositionen = new javax.swing.JComboBox();
        dialog_error = new javax.swing.JDialog();
        errordialog_title = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        errordialog_message = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        button_lokal = new javax.swing.JButton();
        button_erstelleServer = new javax.swing.JButton();
        button_serverBeitreten = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        button_menu_lokal = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        button_menu_erstelleServer = new javax.swing.JMenuItem();
        button_menu_serverBeitreten = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        button_menu_closeProgramm = new javax.swing.JMenuItem();

        frame_lokal.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        frame_lokal.setTitle("Curvefever (Lokal)");
        frame_lokal.setBackground(new java.awt.Color(0, 0, 0));
        frame_lokal.setResizable(false);

        combobox_items.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "An", "Aus" }));

        tf_p1l.setText("Links");
        tf_p1l.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p1lFocusGained(evt);
            }
        });
        tf_p1l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p1lKeyPressed(evt);
            }
        });

        tf_p1r.setText("Rechts");
        tf_p1r.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p1rFocusGained(evt);
            }
        });
        tf_p1r.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p1rKeyPressed(evt);
            }
        });

        tf_p2l.setText("Links");
        tf_p2l.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p2lFocusGained(evt);
            }
        });
        tf_p2l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p2lKeyPressed(evt);
            }
        });

        tf_p2r.setText("Rechts");
        tf_p2r.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p2rFocusGained(evt);
            }
        });
        tf_p2r.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p2rKeyPressed(evt);
            }
        });

        tf_p3l.setText("Links");
        tf_p3l.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p3lFocusGained(evt);
            }
        });
        tf_p3l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p3lKeyPressed(evt);
            }
        });

        tf_p3r.setText("Rechts");
        tf_p3r.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p3rFocusGained(evt);
            }
        });
        tf_p3r.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p3rKeyPressed(evt);
            }
        });

        tf_p4l.setText("Links");
        tf_p4l.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p4lFocusGained(evt);
            }
        });
        tf_p4l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p4lKeyPressed(evt);
            }
        });

        tf_p4r.setText("Rechts");
        tf_p4r.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p4rFocusGained(evt);
            }
        });
        tf_p4r.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p4rKeyPressed(evt);
            }
        });

        tf_p5l.setText("Links");
        tf_p5l.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p5lFocusGained(evt);
            }
        });
        tf_p5l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p5lKeyPressed(evt);
            }
        });

        tf_p5r.setText("Rechts");
        tf_p5r.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p5rFocusGained(evt);
            }
        });
        tf_p5r.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p5rKeyPressed(evt);
            }
        });

        tf_p6l.setText("Links");
        tf_p6l.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p6lFocusGained(evt);
            }
        });
        tf_p6l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p6lKeyPressed(evt);
            }
        });

        tf_p6r.setText("Rechts");
        tf_p6r.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p6rFocusGained(evt);
            }
        });
        tf_p6r.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p6rKeyPressed(evt);
            }
        });

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Tastenzuweisung");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Optionen");

        jLabel24.setText("Items:");

        jLabel25.setText("Player Geschwindigkeit:");

        combobox_playerSpeed.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "99", "98", "97", "96", "95", "94", "93", "92", "91", "90", "89", "88", "87", "86", "85", "84", "83", "82", "81", "80", "79", "78", "77", "76", "75", "74", "73", "72", "71", "70", "69", "68", "67", "66", "65", "64", "63", "62", "61", "60", "59", "58", "57", "56", "55", "54", "53", "52", "51", "50", "49", "48", "47", "46", "45", "44", "43", "42", "41", "40", "39", "38", "37", "36", "35", "34", "33", "32", "31", "30", "29", "28", "27", "26", "25", "24", "23", "22", "21", "20", "19", "18", "17", "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1" }));
        combobox_playerSpeed.setSelectedIndex(20);

        jLabel26.setText("Benötigte Siege:");

        combobox_necSiege.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "50", "49", "48", "47", "46", "45", "44", "43", "42", "41", "40", "39", "38", "37", "36", "35", "34", "32", "31", "30", "29", "28", "27", "26", "25", "24", "23", "22", "21", "20", "19", "18", "17", "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1" }));
        combobox_necSiege.setSelectedIndex(10);

        jLabel27.setText("Pausieren möglich?");

        combobox_pausieren.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ja", "Nein" }));

        button_lokal_final.setText("Starte lokales Spiel");
        button_lokal_final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_lokal_finalActionPerformed(evt);
            }
        });

        jLabel28.setText("Gewinnfoto erstellen?");

        combobox_gewinnfoto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ja", "Nein" }));
        combobox_gewinnfoto.setSelectedIndex(1);

        tf_name1.setBackground(colors.get(0));
        tf_name1.setText("Spieler 1");
        tf_name1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_name1FocusGained(evt);
            }
        });

        tf_name2.setBackground(colors.get(1));
        tf_name2.setText("Spieler 2");
        tf_name2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_name2FocusGained(evt);
            }
        });

        tf_name3.setBackground(colors.get(2));
        tf_name3.setText("Spieler 3");
        tf_name3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_name3FocusGained(evt);
            }
        });

        tf_name4.setBackground(colors.get(3));
        tf_name4.setText("Spieler 4");
        tf_name4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_name4FocusGained(evt);
            }
        });

        tf_name5.setBackground(colors.get(4));
        tf_name5.setText("Spieler 5");
        tf_name5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_name5FocusGained(evt);
            }
        });

        tf_name6.setBackground(colors.get(5));
        tf_name6.setText("Spieler 6");
        tf_name6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_name6FocusGained(evt);
            }
        });

        tf_name7.setBackground(colors.get(6));
        tf_name7.setText("Spieler 7");
        tf_name7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_name7FocusGained(evt);
            }
        });

        tf_p7l.setText("Links");
        tf_p7l.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p7lFocusGained(evt);
            }
        });
        tf_p7l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p7lKeyPressed(evt);
            }
        });

        tf_p7r.setText("Rechts");
        tf_p7r.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_p7rFocusGained(evt);
            }
        });
        tf_p7r.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_p7rKeyPressed(evt);
            }
        });

        jLabel29.setText("Spieler Startposition:");

        combobox_startposition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Random" }));

        javax.swing.GroupLayout frame_lokalLayout = new javax.swing.GroupLayout(frame_lokal.getContentPane());
        frame_lokal.getContentPane().setLayout(frame_lokalLayout);
        frame_lokalLayout.setHorizontalGroup(
            frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frame_lokalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frame_lokalLayout.createSequentialGroup()
                        .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frame_lokalLayout.createSequentialGroup()
                                .addComponent(tf_name7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_p7l, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_p7r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(frame_lokalLayout.createSequentialGroup()
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(frame_lokalLayout.createSequentialGroup()
                                        .addComponent(tf_name5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_p5l, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(frame_lokalLayout.createSequentialGroup()
                                        .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tf_name3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tf_name4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(tf_p4l, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tf_p3l, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(frame_lokalLayout.createSequentialGroup()
                                        .addComponent(tf_name6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_p6l, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(frame_lokalLayout.createSequentialGroup()
                                        .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tf_name1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tf_name2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tf_p2l, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                                            .addComponent(tf_p1l))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tf_p2r)
                                        .addComponent(tf_p1r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tf_p6r, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p4r, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p3r, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p5r, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frame_lokalLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(button_lokal_final, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
                            .addGroup(frame_lokalLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combobox_pausieren, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combobox_necSiege, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combobox_playerSpeed, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combobox_items, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combobox_startposition, javax.swing.GroupLayout.Alignment.TRAILING, 0, 80, Short.MAX_VALUE)
                                    .addComponent(combobox_gewinnfoto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(frame_lokalLayout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        frame_lokalLayout.setVerticalGroup(
            frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_lokalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator7)
                    .addGroup(frame_lokalLayout.createSequentialGroup()
                        .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_lokalLayout.createSequentialGroup()
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel24)
                                    .addComponent(combobox_items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25)
                                    .addComponent(combobox_playerSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel26)
                                    .addComponent(combobox_necSiege, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel27)
                                    .addComponent(combobox_pausieren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel28)
                                    .addComponent(combobox_gewinnfoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel29)
                                    .addComponent(combobox_startposition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(button_lokal_final))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_lokalLayout.createSequentialGroup()
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tf_name1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p1l)
                                    .addComponent(tf_p1r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tf_name2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p2l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p2r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tf_name3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p3l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p3r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tf_name4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p4l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p4r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tf_name5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p5l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p5r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tf_name6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p6l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p6r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_lokalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tf_name7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p7l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_p7r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );

        frame_erstelleServer.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frame_erstelleServer.setTitle("Curvefever (Server erstellen)");
        frame_erstelleServer.setResizable(false);
        frame_erstelleServer.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                frame_erstelleServerWindowClosing(evt);
            }
        });

        jLabel1.setText("Player Geschwindigkeit: ");

        erstelleServer_combobox_playerSpeed.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        erstelleServer_combobox_playerSpeed.setSelectedIndex(20);
        erstelleServer_combobox_playerSpeed.setToolTipText("");

        jLabel2.setText("Benötigte Siege zum Gesamtsieg: ");

        erstelleServer_combobox_necSiege.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "50", "49", "48", "47", "46", "45", "44", "43", "42", "41", "40", "39", "38", "37", "36", "35", "34", "32", "31", "30", "29", "28", "27", "26", "25", "24", "23", "22", "21", "20", "19", "18", "17", "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1" }));
        erstelleServer_combobox_necSiege.setSelectedIndex(10);

        jLabel3.setText("Wer darf pausieren?:");

        erstelleServer_combobox_pausieren.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jeder", "Server", "Niemand" }));
        erstelleServer_combobox_pausieren.setSelectedIndex(1);

        jLabel4.setText("Maximale Anzahl Spieler: ");

        erstelleServer_combobox_anzahlSpieler.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6", "7", "8" }));
        erstelleServer_combobox_anzahlSpieler.setSelectedIndex(6);

        jLabel5.setText("Items:");

        erstelleServer_combobox_items.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aus", "An" }));
        erstelleServer_combobox_items.setSelectedIndex(1);

        erstelleServer_button_joinServer.setText("Erstelle Server");
        erstelleServer_button_joinServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erstelleServer_button_joinServerActionPerformed(evt);
            }
        });

        erstelleServer_tf_port.setText("28960");

        jLabel8.setText("Port: ");

        jLabel9.setText("Name des Servers:");

        erstelleServer_tf_servername.setText("CurveFever Server");

        erstelleServer_list_player.setModel(dlm_spielerListeS);
        jScrollPane1.setViewportView(erstelleServer_list_player);

        jLabel10.setText("Spielername:");

        erstelleServer_tf_spielername.setText("Host");

        jLabel11.setText("Steuerung: ");

        erstelleServer_toggleb_links.setText("Links");
        erstelleServer_toggleb_links.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erstelleServer_toggleb_linksActionPerformed(evt);
            }
        });

        erstelleServer_toggleb_rechts.setText("Rechts");
        erstelleServer_toggleb_rechts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erstelleServer_toggleb_rechtsActionPerformed(evt);
            }
        });

        erstelleServer_b_start.setText("Start");
        erstelleServer_b_start.setEnabled(false);
        erstelleServer_b_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erstelleServer_b_startActionPerformed(evt);
            }
        });

        jLabel20.setText("Gewinnfoto:");

        erstelleServer_combobox_gewinnfoto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ja", "Nein" }));
        erstelleServer_combobox_gewinnfoto.setSelectedIndex(1);

        jLabel21.setText("Spieler Positionen:");

        erstelleServer_combobox_spielerPositionen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Random" }));

        javax.swing.GroupLayout frame_erstelleServerLayout = new javax.swing.GroupLayout(frame_erstelleServer.getContentPane());
        frame_erstelleServer.getContentPane().setLayout(frame_erstelleServerLayout);
        frame_erstelleServerLayout.setHorizontalGroup(
            frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frame_erstelleServerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frame_erstelleServerLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frame_erstelleServerLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_erstelleServerLayout.createSequentialGroup()
                                        .addComponent(erstelleServer_combobox_items, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())
                                    .addComponent(erstelleServer_combobox_playerSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(erstelleServer_combobox_necSiege, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(erstelleServer_combobox_pausieren, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_erstelleServerLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(erstelleServer_combobox_spielerPositionen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(erstelleServer_combobox_gewinnfoto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(erstelleServer_combobox_anzahlSpieler, 0, 80, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(frame_erstelleServerLayout.createSequentialGroup()
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(erstelleServer_b_start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator5)
                            .addComponent(jSeparator4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_erstelleServerLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(erstelleServer_tf_servername)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(erstelleServer_tf_port, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_erstelleServerLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(erstelleServer_toggleb_links, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(erstelleServer_toggleb_rechts, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(erstelleServer_button_joinServer, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_erstelleServerLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(erstelleServer_tf_spielername, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        frame_erstelleServerLayout.setVerticalGroup(
            frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frame_erstelleServerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(erstelleServer_tf_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(erstelleServer_tf_servername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frame_erstelleServerLayout.createSequentialGroup()
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(erstelleServer_combobox_items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(erstelleServer_combobox_playerSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(erstelleServer_combobox_necSiege, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(erstelleServer_combobox_pausieren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(erstelleServer_combobox_anzahlSpieler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(erstelleServer_combobox_gewinnfoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(erstelleServer_combobox_spielerPositionen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(erstelleServer_tf_spielername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frame_erstelleServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(erstelleServer_toggleb_links)
                    .addComponent(jLabel11)
                    .addComponent(erstelleServer_toggleb_rechts)
                    .addComponent(erstelleServer_button_joinServer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(erstelleServer_b_start)
                .addContainerGap())
        );

        frame_serverBeitreten.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frame_serverBeitreten.setTitle("Curvefever (Server beitreten)");
        frame_serverBeitreten.setResizable(false);
        frame_serverBeitreten.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                frame_serverBeitretenWindowClosing(evt);
            }
        });

        jLabel6.setText("Player Geschwindigkeit: ");

        joinServer_combobox_playerSpeed.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        joinServer_combobox_playerSpeed.setSelectedIndex(40);
        joinServer_combobox_playerSpeed.setEnabled(false);

        jLabel7.setText("Benötigte Siege zum Gesamtsieg: ");

        joinServer_combobox_necWins.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "50", "49", "48", "47", "46", "45", "44", "43", "42", "41", "40", "39", "38", "37", "36", "35", "34", "32", "31", "30", "29", "28", "27", "26", "25", "24", "23", "22", "21", "20", "19", "18", "17", "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1" }));
        joinServer_combobox_necWins.setSelectedIndex(10);
        joinServer_combobox_necWins.setEnabled(false);

        jLabel12.setText("Wer darf pausieren?:");

        joinServer_combobox_pausieren.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Server", "Niemand" }));
        joinServer_combobox_pausieren.setEnabled(false);

        jLabel13.setText("Maximale Anzahl Spieler: ");

        joinServer_combobox_anzahlSpieler.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6", "7", "8" }));
        joinServer_combobox_anzahlSpieler.setSelectedIndex(6);
        joinServer_combobox_anzahlSpieler.setToolTipText("");
        joinServer_combobox_anzahlSpieler.setEnabled(false);

        jLabel14.setText("Items:");

        joinServer_combobox_items.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aus", "An" }));
        joinServer_combobox_items.setSelectedIndex(1);
        joinServer_combobox_items.setEnabled(false);

        joinServer_button_joinServer.setText("Trete Server bei");
        joinServer_button_joinServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinServer_button_joinServerActionPerformed(evt);
            }
        });

        joinServer_tf_port.setText("28960");

        jLabel15.setText("Port: ");

        jLabel16.setText("IP des Servers:");

        joinServer_tf_serverip.setText("127.0.0.1");

        joinServer_list_player.setModel(dlm_spielerListeC);
        jScrollPane2.setViewportView(joinServer_list_player);

        jLabel17.setText("Spielername:");

        jLabel18.setText("Steuerung: ");

        joinServer_toggleb_links.setText("Links");
        joinServer_toggleb_links.setEnabled(false);
        joinServer_toggleb_links.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinServer_toggleb_linksActionPerformed(evt);
            }
        });

        joinServer_toggleb_rechts.setText("Rechts");
        joinServer_toggleb_rechts.setEnabled(false);
        joinServer_toggleb_rechts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinServer_toggleb_rechtsActionPerformed(evt);
            }
        });

        joinServer_b_ready.setText("Fertig!");
        joinServer_b_ready.setEnabled(false);
        joinServer_b_ready.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinServer_b_readyActionPerformed(evt);
            }
        });

        jLabel31.setText("Gewinnfoto:");

        joinServer_combobox_gewinnfoto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ja", "Nein" }));
        joinServer_combobox_gewinnfoto.setSelectedIndex(1);
        joinServer_combobox_gewinnfoto.setEnabled(false);

        jLabel32.setText("Spieler Positionen:");

        joinServer_combobox_spielerPositionen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Random" }));
        joinServer_combobox_spielerPositionen.setEnabled(false);

        javax.swing.GroupLayout frame_serverBeitretenLayout = new javax.swing.GroupLayout(frame_serverBeitreten.getContentPane());
        frame_serverBeitreten.getContentPane().setLayout(frame_serverBeitretenLayout);
        frame_serverBeitretenLayout.setHorizontalGroup(
            frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frame_serverBeitretenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frame_serverBeitretenLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(joinServer_combobox_necWins, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joinServer_combobox_pausieren, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joinServer_combobox_anzahlSpieler, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joinServer_combobox_items, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joinServer_combobox_gewinnfoto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joinServer_combobox_playerSpeed, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joinServer_combobox_spielerPositionen, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator8)
                    .addComponent(jSeparator6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_serverBeitretenLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(joinServer_tf_serverip)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(joinServer_tf_port, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(joinServer_button_joinServer, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(frame_serverBeitretenLayout.createSequentialGroup()
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(frame_serverBeitretenLayout.createSequentialGroup()
                                .addComponent(joinServer_toggleb_links, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(joinServer_toggleb_rechts, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(joinServer_b_ready, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(joinServer_tf_spielername))))
                .addContainerGap())
        );
        frame_serverBeitretenLayout.setVerticalGroup(
            frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frame_serverBeitretenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(joinServer_tf_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(joinServer_tf_serverip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(joinServer_button_joinServer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(frame_serverBeitretenLayout.createSequentialGroup()
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(joinServer_combobox_items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(joinServer_combobox_playerSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(joinServer_combobox_necWins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(joinServer_combobox_pausieren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(joinServer_combobox_anzahlSpieler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(joinServer_combobox_gewinnfoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(joinServer_combobox_spielerPositionen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(joinServer_tf_spielername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frame_serverBeitretenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(joinServer_toggleb_links)
                    .addComponent(joinServer_toggleb_rechts)
                    .addComponent(joinServer_b_ready))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dialog_error.setModal(true);
        dialog_error.setResizable(false);

        errordialog_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errordialog_title.setText("Title");

        errordialog_message.setEditable(false);
        errordialog_message.setColumns(20);
        errordialog_message.setLineWrap(true);
        errordialog_message.setRows(10);
        errordialog_message.setText("Nutzername wird schon benutzt oder ein Verbindungsfehler ist aufgetreten. Bitte einen anderen Nutzernamen waehlen und erneut versuchen!");
        jScrollPane3.setViewportView(errordialog_message);

        javax.swing.GroupLayout dialog_errorLayout = new javax.swing.GroupLayout(dialog_error.getContentPane());
        dialog_error.getContentPane().setLayout(dialog_errorLayout);
        dialog_errorLayout.setHorizontalGroup(
            dialog_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialog_errorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialog_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
                    .addComponent(errordialog_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dialog_errorLayout.setVerticalGroup(
            dialog_errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog_errorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(errordialog_title)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Curvefever (Hauptmenu)");
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Internet");

        button_lokal.setText("Starte lokales Spiel");
        button_lokal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_lokalActionPerformed(evt);
            }
        });

        button_erstelleServer.setText("Erstelle Server");
        button_erstelleServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_erstelleServerActionPerformed(evt);
            }
        });

        button_serverBeitreten.setText("Server beitreten");
        button_serverBeitreten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_serverBeitretenActionPerformed(evt);
            }
        });

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Lokal");

        jMenu1.setText("Programm");

        button_menu_lokal.setText("Starte lokales Spiel");
        button_menu_lokal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_menu_lokalActionPerformed(evt);
            }
        });
        jMenu1.add(button_menu_lokal);

        jMenu3.setText("Internet");

        button_menu_erstelleServer.setText("Create Server");
        button_menu_erstelleServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_menu_erstelleServerActionPerformed(evt);
            }
        });
        jMenu3.add(button_menu_erstelleServer);

        button_menu_serverBeitreten.setText("Join Server");
        button_menu_serverBeitreten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_menu_serverBeitretenActionPerformed(evt);
            }
        });
        jMenu3.add(button_menu_serverBeitreten);

        jMenu1.add(jMenu3);
        jMenu1.add(jSeparator1);

        button_menu_closeProgramm.setText("Close");
        button_menu_closeProgramm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_menu_closeProgrammActionPerformed(evt);
            }
        });
        jMenu1.add(button_menu_closeProgramm);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(button_lokal, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button_serverBeitreten, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_erstelleServer, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_lokal)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_erstelleServer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_serverBeitreten, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_menu_erstelleServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_menu_erstelleServerActionPerformed
        frame_erstelleServer.setLocation(this.getX(), this.getY());
        frame_erstelleServer.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_menu_erstelleServerActionPerformed

    private void button_menu_serverBeitretenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_menu_serverBeitretenActionPerformed
        frame_serverBeitreten.setLocation(this.getX(), this.getY());
        frame_serverBeitreten.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_menu_serverBeitretenActionPerformed

    private void erstelleServer_button_joinServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erstelleServer_button_joinServerActionPerformed
        if(erstelleServer()) {
            dlm_spielerListeS.addElement(erstelleServer_tf_spielername.getText());
            erstelleServer_toggleb_links.setBackground(colors.get(0));
            erstelleServer_toggleb_rechts.setBackground(colors.get(0));
            for (int i = 0; i < erstelleServer_combobox_anzahlSpieler.getSelectedIndex()+1; i++) {
                dlm_spielerListeS.addElement("Unbesetzt");
            }
            
            erstelleServer_tf_servername.setEnabled(false);
            erstelleServer_tf_port.setEnabled(false);
            erstelleServer_button_joinServer.setEnabled(false);
            erstelleServer_combobox_items.setEnabled(false);
            erstelleServer_combobox_playerSpeed.setEnabled(false);
            erstelleServer_combobox_necSiege.setEnabled(false);
            erstelleServer_combobox_pausieren.setEnabled(false);
            erstelleServer_combobox_anzahlSpieler.setEnabled(false);
            erstelleServer_tf_spielername.setEnabled(false);
            erstelleServer_combobox_gewinnfoto.setEnabled(false);
            erstelleServer_combobox_spielerPositionen.setEnabled(false);
        }
    }//GEN-LAST:event_erstelleServer_button_joinServerActionPerformed

    private void button_menu_lokalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_menu_lokalActionPerformed
        frame_lokal.setLocation(this.getX(), this.getY());
        frame_lokal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_menu_lokalActionPerformed

    private void button_erstelleServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_erstelleServerActionPerformed
        frame_erstelleServer.setLocation(this.getX(), this.getY());
        frame_erstelleServer.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_erstelleServerActionPerformed

    private void button_serverBeitretenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_serverBeitretenActionPerformed
        frame_serverBeitreten.setLocation(this.getX(), this.getY());
        frame_serverBeitreten.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_serverBeitretenActionPerformed

    private void button_lokalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_lokalActionPerformed
        frame_lokal.setLocation(this.getX(), this.getY());
        frame_lokal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_lokalActionPerformed

    private void button_lokal_finalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_lokal_finalActionPerformed
        combobox_items.requestFocus();
        button_lokal_final.setEnabled(false);
        starteSpielLokal();
        frame_lokal.setVisible(false);
    }//GEN-LAST:event_button_lokal_finalActionPerformed
    
    private void joinServer_button_joinServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinServer_button_joinServerActionPerformed
        if(joinServer()) {
            joinServer_tf_serverip.setEnabled(false);
            joinServer_tf_port.setEnabled(false);
            joinServer_button_joinServer.setEnabled(false);
            joinServer_tf_spielername.setEnabled(false);
        }
    }//GEN-LAST:event_joinServer_button_joinServerActionPerformed

    private void joinServer_b_readyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinServer_b_readyActionPerformed
        if(joinServer_toggleb_links.getText().length()==1 && joinServer_toggleb_rechts.getText().length()==1) {
            CConSender.sendeNachricht("Menu_Ready:"+joinServer_tf_spielername.getText());
            joinServer_b_ready.setEnabled(false);
        }
    }//GEN-LAST:event_joinServer_b_readyActionPerformed

    private void erstelleServer_b_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erstelleServer_b_startActionPerformed
        if(erstelleServer_toggleb_links.getText().length()==1 && erstelleServer_toggleb_rechts.getText().length()==1) {
            starteSpielServer();
            frame_erstelleServer.setVisible(false);
        }
    }//GEN-LAST:event_erstelleServer_b_startActionPerformed

    private void frame_serverBeitretenWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frame_serverBeitretenWindowClosing
        if(CConSender!=null)
            CConSender.sendeNachricht("WindowClosing:"+joinServer_tf_spielername.getText());
    }//GEN-LAST:event_frame_serverBeitretenWindowClosing

    private void frame_erstelleServerWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frame_erstelleServerWindowClosing
        if(SConnector!=null) {
            SConnector.setEnde(true);
        }
    }//GEN-LAST:event_frame_erstelleServerWindowClosing

    private void button_menu_closeProgrammActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_menu_closeProgrammActionPerformed
        System.exit(0);
    }//GEN-LAST:event_button_menu_closeProgrammActionPerformed

    //<editor-fold defaultstate="collapsed" desc="Unwichtige GUI-Events">
    //<editor-fold defaultstate="collapsed" desc="NameFocusGained">
    private void tf_name7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_name7FocusGained
        tf_name7.setText("");
    }//GEN-LAST:event_tf_name7FocusGained

    private void tf_name6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_name6FocusGained
        tf_name6.setText("");
    }//GEN-LAST:event_tf_name6FocusGained

    private void tf_name5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_name5FocusGained
        tf_name5.setText("");
    }//GEN-LAST:event_tf_name5FocusGained

    private void tf_name4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_name4FocusGained
        tf_name4.setText("");
    }//GEN-LAST:event_tf_name4FocusGained

    private void tf_name3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_name3FocusGained
        tf_name3.setText("");
    }//GEN-LAST:event_tf_name3FocusGained

    private void tf_name2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_name2FocusGained
        tf_name2.setText("");
    }//GEN-LAST:event_tf_name2FocusGained

    private void tf_name1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_name1FocusGained
        tf_name1.setText("");
    }//GEN-LAST:event_tf_name1FocusGained
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc="KeyPressedGained">
    private void tf_p7rKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p7rKeyPressed
        button_lokal.requestFocus();
    }//GEN-LAST:event_tf_p7rKeyPressed

    private void tf_p7lKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p7lKeyPressed
        //tf_p7r.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p7r.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p7lKeyPressed
	
    private void tf_p6rKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p6rKeyPressed
        //tf_p7l.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p7l.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p6rKeyPressed

    private void tf_p6lKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p6lKeyPressed
        //tf_p6r.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p6r.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p6lKeyPressed

    private void tf_p5rKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p5rKeyPressed
        //tf_p6l.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p6l.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p5rKeyPressed

    private void tf_p5lKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p5lKeyPressed
        //tf_p5r.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p5r.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p5lKeyPressed

    private void tf_p4rKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p4rKeyPressed
        //tf_p5l.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p5l.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p4rKeyPressed

    private void tf_p4lKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p4lKeyPressed
        //tf_p4r.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p4r.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p4lKeyPressed

    private void tf_p3rKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p3rKeyPressed
        //tf_p4l.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p4l.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p3rKeyPressed

    private void tf_p3lKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p3lKeyPressed
        //tf_p3r.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p3r.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p3lKeyPressed

    private void tf_p2rKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p2rKeyPressed
        //tf_p3l.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p3l.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p2rKeyPressed

    private void tf_p2lKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p2lKeyPressed
        //tf_p2r.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p2r.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p2lKeyPressed

    private void tf_p1rKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p1rKeyPressed
        //tf_p2l.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p2l.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p1rKeyPressed

    private void tf_p1lKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_p1lKeyPressed
        //tf_p1r.requestFocus();
        new Thread(new Runnable() { public void run() { try { Thread.sleep(100); } catch(Exception ex) {}  tf_p1r.requestFocus(); }}).start();
    }//GEN-LAST:event_tf_p1lKeyPressed

    private void tf_p1lFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p1lFocusGained
        tf_p1l.setText("");
    }//GEN-LAST:event_tf_p1lFocusGained

    private void tf_p1rFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p1rFocusGained
        tf_p1r.setText("");
    }//GEN-LAST:event_tf_p1rFocusGained

    private void tf_p2lFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p2lFocusGained
        tf_p2l.setText("");
    }//GEN-LAST:event_tf_p2lFocusGained

    private void tf_p2rFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p2rFocusGained
        tf_p2r.setText("");
    }//GEN-LAST:event_tf_p2rFocusGained

    private void tf_p3lFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p3lFocusGained
        tf_p3l.setText("");
    }//GEN-LAST:event_tf_p3lFocusGained

    private void tf_p3rFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p3rFocusGained
        tf_p3r.setText("");
    }//GEN-LAST:event_tf_p3rFocusGained

    private void tf_p4lFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p4lFocusGained
        tf_p4l.setText("");
    }//GEN-LAST:event_tf_p4lFocusGained

    private void tf_p4rFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p4rFocusGained
        tf_p4r.setText("");
    }//GEN-LAST:event_tf_p4rFocusGained

    private void tf_p5lFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p5lFocusGained
        tf_p5l.setText("");
    }//GEN-LAST:event_tf_p5lFocusGained

    private void tf_p5rFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p5rFocusGained
        tf_p5r.setText("");
    }//GEN-LAST:event_tf_p5rFocusGained

    private void tf_p6lFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p6lFocusGained
        tf_p6l.setText("");
    }//GEN-LAST:event_tf_p6lFocusGained

    private void tf_p6rFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p6rFocusGained
        tf_p6r.setText("");
    }//GEN-LAST:event_tf_p6rFocusGained

    private void tf_p7lFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p7lFocusGained
        tf_p7l.setText("");
    }//GEN-LAST:event_tf_p7lFocusGained

    private void tf_p7rFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_p7rFocusGained
        tf_p7r.setText("");
    }//GEN-LAST:event_tf_p7rFocusGained
    //</editor-fold>
    
    private void joinServer_toggleb_linksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinServer_toggleb_linksActionPerformed
        joinServer_toggleb_rechts.setSelected(false);
    }//GEN-LAST:event_joinServer_toggleb_linksActionPerformed

    private void joinServer_toggleb_rechtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinServer_toggleb_rechtsActionPerformed
        joinServer_toggleb_links.setSelected(false);
    }//GEN-LAST:event_joinServer_toggleb_rechtsActionPerformed

    private void erstelleServer_toggleb_linksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erstelleServer_toggleb_linksActionPerformed
        erstelleServer_toggleb_rechts.setSelected(false);
    }//GEN-LAST:event_erstelleServer_toggleb_linksActionPerformed

    private void erstelleServer_toggleb_rechtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erstelleServer_toggleb_rechtsActionPerformed
        erstelleServer_toggleb_links.setSelected(false);
    }//GEN-LAST:event_erstelleServer_toggleb_rechtsActionPerformed
    //</editor-fold>
    //</editor-fold>
    
    
    //<editor-fold defaultstate="collapsed" desc="Server">
    private boolean erstelleServer() {
        SConnector = new Server_Connector(dlm_spielerListeS, GUI, erstelleServer_combobox_anzahlSpieler.getSelectedIndex()+1, Integer.parseInt(erstelleServer_tf_port.getText()),player);
        SSender = SConnector.SSender;
        String nutzername = erstelleServer_tf_spielername.getText();
        try {
            if("".equals(nutzername) || "Bitte einen Nutzernamen eingeben!".equals(nutzername)) { erstelleServer_tf_spielername.setText("Bitte einen Nutzernamen eingeben!"); return false; }
            if(!SConnector.starteServer(Integer.parseInt(erstelleServer_tf_port.getText()))) { showErrorDialog("Server konnte nicht gestartet werden", "Moeglicherweise ist bereits ein Server auf diesem Port gestartet. Versuche einen anderen.", frame_erstelleServer);return false;}
            SConnector.start();
            SConnector.ALTeilnehmer.add(nutzername);
        } catch(NumberFormatException ex) {
            System.err.println("StartGUI: erstelleServer: "+ex);
            return false;
        }
        return true;
    }
    
    private void starteSpielServer() {
        SSender.sendeNachrichtAnClients("Spiel_ServerStartetSpiel_PING");
        //SConnector.setEnde(true);
        SConnector.setSpielLaeuft(true);
        final int port = Integer.parseInt(erstelleServer_tf_port.getText());
        final String servername = erstelleServer_tf_servername.getText();
        final boolean items = "An".equals((String)erstelleServer_combobox_items.getSelectedItem());
        final int playerSpeed = Integer.parseInt((String)erstelleServer_combobox_playerSpeed.getSelectedItem());
        final Object necWins = Integer.parseInt((String)erstelleServer_combobox_necSiege.getSelectedItem());
        final boolean pausieren = ("Jeder".equals((String)erstelleServer_combobox_pausieren.getSelectedItem()) || "Server".equals((String)erstelleServer_combobox_pausieren.getSelectedItem()));
        final int maxAnzahlSpieler = Integer.parseInt((String)erstelleServer_combobox_anzahlSpieler.getSelectedItem());
        final boolean siegerFoto = erstelleServer_combobox_gewinnfoto.getSelectedItem()=="Ja";
        final String startPositionen = erstelleServer_combobox_spielerPositionen.getSelectedItem().toString();
        final int realAnzahlSpieler = SConnector.ALTeilnehmer.size();
        final String hostSpielerName = erstelleServer_tf_spielername.getText();
        final ArrayList<String> namen = new ArrayList<>();
        
        //Warte auf Antwort von allen Spielern
        for (int i = 0; i < SConnector.ALEmpfaenger.size(); i++) {
            long curTime = System.currentTimeMillis();
            while(!SConnector.ALEmpfaenger.get(i).bereitFuerSpiel) {
                if(System.currentTimeMillis()-curTime>5000) { //Timeout
                    System.err.println("Server (StarteSpielServer1): Kicke Spieler #"+i+" wegen Timeout!");
                    //Kicke Spieler
                    SSender.sendeNachrichtAnClient(SConnector.ALVerbindungen.get(i), "Beende");
                    SConnector.ALEmpfaenger.get(i).bereitFuerSpiel = true;
                    SConnector.ALEmpfaenger.get(i).verbindungsEnde = true;
                    SConnector.ALTeilnehmer.set(i, SConnector.ALTeilnehmer.get(i) + " (Timeout)");
                }
                try { Thread.sleep(50); } catch (InterruptedException ex) { System.err.println("StartGUI: starteSpielServer: "+ex); }
            }   
            SConnector.ALEmpfaenger.get(i).bereitFuerSpiel = false;
            namen.add(SConnector.ALTeilnehmer.get(i));
        }
        
        namen.add(SConnector.ALTeilnehmer.get(SConnector.ALTeilnehmer.size()-1));
        SSender.sendeNachrichtAnClients("Spiel_SpielWirdErstellt_ErstelleSpiel:"+servername);
        
        try {
            Thread t = new Thread(new Runnable() {                    
                @Override
                public void run() {
                    JFrame newGUI = new JFrame();
                    int windX = frame_erstelleServer.getX();
                    int windY = frame_erstelleServer.getY();
                    int windowWidth = 1360;
                    int windowHeight = 1000;
                    Rectangle maximumWindowBounds = GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();
                    int x = maximumWindowBounds.width-windowWidth;
                    int y = maximumWindowBounds.height-windowHeight;
                    if(windX+windowWidth<=maximumWindowBounds.width) {
                        x = windX;
                    }
                    if(windY+windowHeight<=maximumWindowBounds.height) {
                        y = windY;
                    }
                    newGUI.setBounds(x, y, windowWidth, windowHeight);
                    newGUI.setResizable(false);
                    newGUI.setTitle("CurveFever (Multiplayer): "+servername+" (HOST)");
                    CFM_CurveFeverMultiplayer_Server CFM = new CFM_CurveFeverMultiplayer_Server(newGUI, player, playerSpeed, necWins, pausieren, realAnzahlSpieler, siegerFoto, items, SSender,SConnector, startPositionen);
                    newGUI.addKeyListener(CFM.CF_KL);
                    newGUI.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    
                    for (int i = 0; i < erstelleServer_combobox_anzahlSpieler.getSelectedIndex()+1; i++) {
                        spielerPositionen.add((random.nextInt(newGUI.getWidth()-600)+100)+"-"+(random.nextInt(newGUI.getHeight()-200)+100));
                    }
                    //newGUI.setUndecorated(true);
                    
                    
                    int abstandZwischenPlayer = (newGUI.getWidth()-400) / realAnzahlSpieler;
                    player.add(new CF_Player(hostSpielerName, abstandZwischenPlayer * 0 + abstandZwischenPlayer / 2, newGUI.getHeight()/2, colors.get(0), type(erstelleServer_toggleb_rechts.getText().charAt(0)), type(erstelleServer_toggleb_links.getText().charAt(0)),0,false));
                    
                    for (int i = 1; i < realAnzahlSpieler; i++) {
                        //KEYS sind egal, da über INET nur jeder seine eigene kennen muss
                        if ("Normal".equals(startPositionen)) {
                            player.add(new CF_Player(namen.get(i).replace(" (Fertig)", ""), abstandZwischenPlayer * i + abstandZwischenPlayer / 2, newGUI.getHeight()/2, colors.get(i), -1, -1, i, false));
                        } else { //Random
                            player.add(new CF_Player(namen.get(i).replace(" (Fertig)", ""), Double.parseDouble(spielerPositionen.get(i-1).substring(0,spielerPositionen.get(i).indexOf("-"))), Double.parseDouble(spielerPositionen.get(i-1).substring(spielerPositionen.get(i).indexOf("-"))), colors.get(i), -1, -1, i, false));
                        }
                    }
                    newGUI.add(CFM);
                    
                    //Warte auf Antwort von allen Spielern
                    for (int i = 0; i < SConnector.ALEmpfaenger.size(); i++) {
                        long curTime = System.currentTimeMillis();
                        while(!SConnector.ALEmpfaenger.get(i).bereitFuerSpiel) {
                            if(System.currentTimeMillis()-curTime>5000) { //Timeout
                                System.err.println("Server (StarteSpielServer2): Kicke Spieler #"+i+" wegen Timeout!");
                                //Kicke Spieler
                                SSender.sendeNachrichtAnClient(SConnector.ALVerbindungen.get(i), "Beende");
                                SConnector.ALEmpfaenger.get(i).bereitFuerSpiel = true;
                                SConnector.ALEmpfaenger.get(i).verbindungsEnde = true;
                                SConnector.ALTeilnehmer.set(i, SConnector.ALTeilnehmer.get(i) + " (Timeout)");
                                player.get(i).setName(player.get(i).getName()+" (Timeout)");
                            }
                            try { Thread.sleep(50); } catch (InterruptedException ex) { System.err.println("StartGUI: starteSpielServer: "+ex); }
                        }
                        SConnector.ALEmpfaenger.get(i).bereitFuerSpiel = false;
                    }
                    SSender.sendeNachrichtAnClients("Spiel_SpielSTART");
                    newGUI.setVisible(true);
                    CFM.starte();
                }
            });
            t.start();
        } catch (NoClassDefFoundError ex) {
            System.err.println("Interner JAVA Fehler. Bitte neu kompilieren!");
            System.exit(1);
        }
    }
    
    public String getServerOptions() {
        String options = erstelleServer_combobox_items.getSelectedItem()+":"+
                erstelleServer_combobox_playerSpeed.getSelectedItem()+":"+
                erstelleServer_combobox_necSiege.getSelectedItem()+":"+
                erstelleServer_combobox_pausieren.getSelectedItem()+":"+
                erstelleServer_combobox_anzahlSpieler.getSelectedItem()+":"+
                erstelleServer_combobox_gewinnfoto.getSelectedItem()+":"+
                erstelleServer_combobox_spielerPositionen.getSelectedItem();
        if(erstelleServer_combobox_spielerPositionen.getSelectedItem()=="Random") {
            for (int i = 0; i < spielerPositionen.size(); i++) { options += "-"+spielerPositionen.get(i); }
        }
        return options;
    }
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc="Client">
    private boolean joinServer() {
        String nutzername = joinServer_tf_spielername.getText();
        try {
            if("".equals(nutzername) || "Bitte einen gueltigen Nutzernamen eingeben!".equals(nutzername) || nutzername.indexOf("(Fertig)")!=-1) { joinServer_tf_spielername.setText("Bitte einen gueltigen Nutzernamen eingeben!"); return false; }
            if(!CConSender.stelleVerbindungHer(joinServer_tf_serverip.getText(), Integer.parseInt(joinServer_tf_port.getText()), nutzername, GUI)) { return false; }
            
        } catch(NumberFormatException ex) {
            System.err.println("StartGUI: joinServer: "+ex);
            return false;
        }
        return true;
    }
    
    public void erstelleSpiel(final String servername) {
        Thread t = new Thread(new Runnable() {                    
            @Override
            public void run() {
                javax.swing.JFrame newGUI = new javax.swing.JFrame();
                   
                int windX = frame_serverBeitreten.getX();
                int windY = frame_serverBeitreten.getY();
                int windowWidth = 1360;
                int windowHeight = 1000;
                Rectangle maximumWindowBounds = GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();
                int x = maximumWindowBounds.width-windowWidth;
                int y = maximumWindowBounds.height-windowHeight;
                if(windX+windowWidth<=maximumWindowBounds.width) { x = windX; }
                if(windY+windowHeight<=maximumWindowBounds.height) { y = windY; }
                newGUI.setBounds(x, y, windowWidth, windowHeight);
                
                ArrayList<CF_Player> player = new ArrayList<>();
                int abstandZwischenPlayer = (newGUI.getWidth()-400) / CConSender.teilnehmerNamen.size();
                int leftKey = type(GUI.joinServer_toggleb_links.getText().charAt(0));
                int rightKey = type(GUI.joinServer_toggleb_rechts.getText().charAt(0));
                int spielerNummer = -1;
                for (int i = 0; i < CConSender.teilnehmerNamen.size(); i++) {
                    int yCoord = newGUI.getHeight()/2;
                    int xCoord = abstandZwischenPlayer * i + abstandZwischenPlayer / 2;
                    if("Random".equals(joinServer_combobox_spielerPositionen.getSelectedItem())) {
                        xCoord = Integer.parseInt(spielerPositionen.get(i).substring(0,spielerPositionen.get(i).indexOf("-")));
                        yCoord = Integer.parseInt(spielerPositionen.get(i).substring(spielerPositionen.get(i).indexOf("-")+1));
                    }
                    if(!CConSender.teilnehmerNamen.get(i).contains(CConSender.nutzername)) {
                        player.add(new CF_Player(CConSender.teilnehmerNamen.get(i).replace(" (Fertig)", ""), xCoord, yCoord, colors.get(i),-1,-1,i,false));
                    } else {
                        spielerNummer = i;
                        player.add(new CF_Player(CConSender.teilnehmerNamen.get(i).replace(" (Fertig)", ""), xCoord, yCoord, colors.get(i),rightKey,leftKey,i,false));
                    }
                }
                
                if(spielerNummer == -1) { System.err.println("FEHLER????"); }
                int playerSpeed = Integer.parseInt(joinServer_combobox_playerSpeed.getSelectedItem().toString());
                CFM_CurveFeverMultiplayer_Client CFM = new CFM_CurveFeverMultiplayer_Client(newGUI, //GUI
                        player,     //ArrayList<CF_Player> player
                        playerSpeed, //Object playerSpeed
                        joinServer_combobox_necWins.getSelectedItem(),  //Object necWins
                        "An".equals(joinServer_combobox_pausieren.getSelectedItem().toString()),       //boolean pPausierenMoeglich
                        (Object)CConSender.teilnehmerNamen.size(), //Object anzahlSpieler
                        true, //Gewinnfoto
                        "Jeder".equals(joinServer_combobox_items.getSelectedItem().toString()), //Items
                        CConSender,   //Object Client_ConnectorSender
                        spielerNummer, //Spielernummer
                        joinServer_combobox_spielerPositionen.getSelectedItem().toString()); //
                                   
                newGUI.setTitle("CurveFever (Multiplayer): "+servername+" ("+joinServer_tf_spielername.getText()+")");
                newGUI.addKeyListener(CFM.CF_KL);     
                newGUI.setResizable(false);   
                newGUI.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
                //newGUI.setUndecorated(true);
                newGUI.add(CFM);

                GUI.CFM_Client = CFM;
                GUI.newGUI = newGUI;
                CConSender.sendeNachricht("+Spiel_SpielFertigErstellt");
            }
        });
        t.start();
    }
    
    public void setServerEinstellungen(String items, String playerSpeed, String necSiege, String pausieren, String anzahlSpieler, String gewinnfoto, String spielerPositionenS, String spielerNummer) {
        joinServer_combobox_items.setSelectedItem(items);
        joinServer_combobox_playerSpeed.setSelectedItem(playerSpeed);
        joinServer_combobox_necWins.setSelectedItem(necSiege);
        joinServer_combobox_pausieren.setSelectedItem(pausieren);
        joinServer_combobox_anzahlSpieler.setSelectedItem(anzahlSpieler);
        joinServer_toggleb_links.setBackground(colors.get(Integer.parseInt(spielerNummer)-1));
        joinServer_toggleb_rechts.setBackground(colors.get(Integer.parseInt(spielerNummer)-1));
        joinServer_combobox_gewinnfoto.setSelectedItem(gewinnfoto);
        if(!"Normal".equals(spielerPositionenS)) {
            joinServer_combobox_spielerPositionen.setSelectedItem(spielerPositionenS.substring(0,spielerPositionenS.indexOf("-")));
            String[] spielerPositionsArray = spielerPositionenS.split("-");
            for (int i = 1; i < spielerPositionsArray.length; i+=2) {
                spielerPositionen.add(spielerPositionsArray[i]+"-"+spielerPositionsArray[i+1]);
            }
        } else {
            joinServer_combobox_spielerPositionen.setSelectedItem(spielerPositionenS);
        }
    }
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc="StartSpielLokal">
    private void starteSpielLokal() {
        final ArrayList<String> links = new ArrayList<>();
        links.add(tf_p1l.getText());
        links.add(tf_p2l.getText());
        links.add(tf_p3l.getText());
        links.add(tf_p4l.getText());
        links.add(tf_p5l.getText());
        links.add(tf_p6l.getText());
        links.add(tf_p7l.getText());
        final ArrayList<String> rechts = new ArrayList<>();
        rechts.add(tf_p1r.getText());
        rechts.add(tf_p2r.getText());
        rechts.add(tf_p3r.getText());
        rechts.add(tf_p4r.getText());
        rechts.add(tf_p5r.getText());
        rechts.add(tf_p6r.getText());
        rechts.add(tf_p7r.getText());
        final ArrayList<String> namen = new ArrayList<>();
        namen.add(tf_name1.getText());
        namen.add(tf_name2.getText());
        namen.add(tf_name3.getText());
        namen.add(tf_name4.getText());
        namen.add(tf_name5.getText());
        namen.add(tf_name6.getText());
        namen.add(tf_name7.getText());
        final ArrayList<Integer> spielerPos = new ArrayList<>();
        int playingPlayers = 0;
        final int[] keyR = new int[rechts.size()];
        final int[] keyL = new int[links.size()];
        for (int i = 0; i < links.size(); i++) {
            if(rechts.get(i).length()>=1 && links.get(i).length()>=1 && !"Rechts".equals(rechts.get(i)) && !"Links".equals(links.get(i))) {
                keyR[i] = type(rechts.get(i).charAt(0));
                keyL[i] = type(links.get(i).charAt(0));
                if(keyR[i]!=-1 && keyL[i] != -1 ) {
                    playingPlayers++;
                    spielerPos.add(i);
                } else {
                    System.out.println("Konnte Spieler"+i+" nicht hinzufügen!");
                }
            }
        }
        
        if(playingPlayers>=2) {
            final Object playerSpeed = combobox_playerSpeed.getSelectedItem();
            final Object necWins = combobox_necSiege.getSelectedItem();
            final boolean pausierenMoeglich = "Ja".equals(combobox_pausieren.getSelectedItem().toString());
            final int anzahlSpieler = playingPlayers;
            final boolean items = "An".equals(combobox_items.getSelectedItem().toString());
            final Object gewinnfoto = combobox_gewinnfoto.getSelectedItem();
            this.setVisible(false);
            final Object startposition = combobox_startposition.getSelectedItem();
            
            try {
                Thread t = new Thread(new Runnable() {                    
                    @Override
                    public void run() {
                        JFrame newGUI = new JFrame();
                        newGUI.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                        newGUI.setBounds(10, 0, 1360, 1000);
                        newGUI.setResizable(false);
                        CFS_CurveFeverSingleplayer CFS = new CFS_CurveFeverSingleplayer(newGUI, player, playerSpeed, necWins, pausierenMoeglich, anzahlSpieler, gewinnfoto, items, false, startposition.toString());;
                        newGUI.addKeyListener(CFS.CF_KL);
                        //newGUI.setUndecorated(true);

                        boolean KI = false;
                        int abstandZwischenPlayer = (newGUI.getWidth()-400) / anzahlSpieler;
                        if(anzahlSpieler==1) { 
                            KI = true; //KI, wenn nur 1 Spieler
                            abstandZwischenPlayer = (newGUI.getWidth()-400) / (anzahlSpieler+1);
                        }
                        String name;
                        for (int i = 0; i < anzahlSpieler; i++) {
                            int curSpielerPos = spielerPos.get(i);
                            if ("".equals(name = namen.get(curSpielerPos))) {
                                name = "P" + i;
                            }
                            
                            if ("Normal".equals(startposition.toString())) {
                                if(KI) {
                                    player.add(new CF_Player(name, abstandZwischenPlayer * i + abstandZwischenPlayer / 2, newGUI.getHeight()/2, colors.get(curSpielerPos), keyR[curSpielerPos], keyL[curSpielerPos], i, false));
                                    player.add(new CF_Player("KI", abstandZwischenPlayer * (i+1) + abstandZwischenPlayer / 2, newGUI.getHeight()/2, colors.get(2), -1, -1, 1, true));
                                } else {
                                    player.add(new CF_Player(name, abstandZwischenPlayer * i + abstandZwischenPlayer / 2, newGUI.getHeight()/2, colors.get(curSpielerPos), keyR[curSpielerPos], keyL[curSpielerPos], i, false));
                                }
                            } else { //Random
                                if(KI) {
                                    int x = random.nextInt(newGUI.getWidth() - 600) + 100;
                                    int y = random.nextInt(newGUI.getHeight() - 200) + 100;
                                    player.add(new CF_Player(name, x, y, colors.get(curSpielerPos), keyR[curSpielerPos], keyL[curSpielerPos], i, false));
                                    x = random.nextInt(newGUI.getWidth() - 600) + 100;
                                    y = random.nextInt(newGUI.getHeight() - 200) + 100;
                                    player.add(new CF_Player("KI", x, y, colors.get(2), -1, -1, 1, true));
                                } else {
                                    int x = random.nextInt(newGUI.getWidth() - 600) + 100;
                                    int y = random.nextInt(newGUI.getHeight() - 200) + 100;
                                    player.add(new CF_Player(name, x, y, colors.get(curSpielerPos), keyR[curSpielerPos], keyL[curSpielerPos], i, false));
                                }
                            }
                        }
                        newGUI.add(CFS);
                        newGUI.setVisible(true);
                        CFS.starte();
                    }
                });
                t.start();
            } catch (NoClassDefFoundError ex) {
                System.err.println("Interner JAVA Fehler. Bitte neu kompilieren!");
                System.exit(1);
            }
        }
    }
    //</editor-fold>
    
    
    //<editor-fold defaultstate="collapsed" desc="Unwichtige Methoden (showErrorDialog/FocusTraversal/Type/Main)">
    public void showErrorDialog(String title, String message, JFrame current) {
        dialog_error.setBounds(current.getX(), current.getY(), 460, 275);
        errordialog_title.setText(title);
        errordialog_message.setText(message);
        dialog_error.setVisible(true);
    }
    
    //<editor-fold defaultstate="collapsed" desc="FocusTraversal">
    public static FocusTraversalPolicy getFocusTraversal(final JComponent order[])
    {
        FocusTraversalPolicy policy = new FocusTraversalPolicy()
        {
            java.util.List list = java.util.Arrays.asList(order);
            public java.awt.Component getFirstComponent(java.awt.Container
                                                        focusCycleRoot)
            {
              return order[0];
            }

            public java.awt.Component getLastComponent(java.awt.Container
                                                       focusCycleRoot)
            {
              return order[order.length - 1];
            }

            public java.awt.Component getComponentAfter(java.awt.Container
                                                        focusCycleRoot,
                                                        java.awt.Component aComponent)
            {
              int index = list.indexOf(aComponent);
              return order[ (index + 1) % order.length];
            }

            public java.awt.Component getComponentBefore(java.awt.Container
                focusCycleRoot,
                java.awt.Component aComponent)
            {
              int index = list.indexOf(aComponent);
              return order[ (index - 1 + order.length) % order.length];
            }

            public java.awt.Component getDefaultComponent(java.awt.Container
                focusCycleRoot)
            {
              return order[0];
            }

            public java.awt.Component getInitialComponent(java.awt.Window window)
            {
              return order[0];
            }
        };
        return policy;
    }
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="TYPE">
    public static int type(char character) {
        switch (character) {
        case 'a': return doType(VK_A);
        case 'b': return doType(VK_B);
        case 'c': return doType(VK_C);
        case 'd': return doType(VK_D); 
        case 'e': return doType(VK_E); 
        case 'f': return doType(VK_F); 
        case 'g': return doType(VK_G); 
        case 'h': return doType(VK_H); 
        case 'i': return doType(VK_I); 
        case 'j': return doType(VK_J); 
        case 'k': return doType(VK_K); 
        case 'l': return doType(VK_L); 
        case 'm': return doType(VK_M); 
        case 'n': return doType(VK_N); 
        case 'o': return doType(VK_O); 
        case 'p': return doType(VK_P); 
        case 'q': return doType(VK_Q); 
        case 'r': return doType(VK_R); 
        case 's': return doType(VK_S); 
        case 't': return doType(VK_T); 
        case 'u': return doType(VK_U); 
        case 'v': return doType(VK_V); 
        case 'w': return doType(VK_W); 
        case 'x': return doType(VK_X); 
        case 'y': return doType(VK_Y); 
        case 'z': return doType(VK_Z); 
        case '0': return doType(VK_0); 
        case '1': return doType(VK_1); 
        case '2': return doType(VK_2); 
        case '3': return doType(VK_3); 
        case '4': return doType(VK_4); 
        case '5': return doType(VK_5); 
        case '6': return doType(VK_6); 
        case '7': return doType(VK_7); 
        case '8': return doType(VK_8); 
        case '9': return doType(VK_9); 
        case '-': return doType(VK_MINUS); 
        case '#': return doType(VK_NUMBER_SIGN); 
        case '^': return doType(VK_CIRCUMFLEX); 
        case '+': return doType(VK_PLUS); 
        case ',': return doType(VK_COMMA); 
        case '<': return doType(VK_LESS); 
        case '.': return doType(VK_PERIOD); 
        default:
            return -1;
        }
    }
    
    private static int doType(int... keyCodes) {
        return doType(keyCodes, keyCodes.length);
    }

    private static int doType(int[] keyCodes, int length) {
        if(length!=0) {
            return keyCodes[0];
        } else return -1;
    }
    // </editor-fold>
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StartGUI gui = new StartGUI();
                gui.GUI = gui;
                gui.setVisible(true);
            }
        });
    }
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc="VARDec">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_erstelleServer;
    private javax.swing.JButton button_lokal;
    private javax.swing.JButton button_lokal_final;
    private javax.swing.JMenuItem button_menu_closeProgramm;
    private javax.swing.JMenuItem button_menu_erstelleServer;
    private javax.swing.JMenuItem button_menu_lokal;
    private javax.swing.JMenuItem button_menu_serverBeitreten;
    private javax.swing.JButton button_serverBeitreten;
    private javax.swing.JComboBox combobox_gewinnfoto;
    private javax.swing.JComboBox combobox_items;
    private javax.swing.JComboBox combobox_necSiege;
    private javax.swing.JComboBox combobox_pausieren;
    private javax.swing.JComboBox combobox_playerSpeed;
    private javax.swing.JComboBox combobox_startposition;
    private javax.swing.JDialog dialog_error;
    private javax.swing.JTextArea errordialog_message;
    private javax.swing.JLabel errordialog_title;
    public javax.swing.JButton erstelleServer_b_start;
    private javax.swing.JButton erstelleServer_button_joinServer;
    private javax.swing.JComboBox erstelleServer_combobox_anzahlSpieler;
    private javax.swing.JComboBox erstelleServer_combobox_gewinnfoto;
    private javax.swing.JComboBox erstelleServer_combobox_items;
    private javax.swing.JComboBox erstelleServer_combobox_necSiege;
    private javax.swing.JComboBox erstelleServer_combobox_pausieren;
    private javax.swing.JComboBox erstelleServer_combobox_playerSpeed;
    private javax.swing.JComboBox erstelleServer_combobox_spielerPositionen;
    private javax.swing.JList erstelleServer_list_player;
    private javax.swing.JTextField erstelleServer_tf_port;
    private javax.swing.JTextField erstelleServer_tf_servername;
    private javax.swing.JTextField erstelleServer_tf_spielername;
    private javax.swing.JToggleButton erstelleServer_toggleb_links;
    private javax.swing.JToggleButton erstelleServer_toggleb_rechts;
    public javax.swing.JFrame frame_erstelleServer;
    private javax.swing.JFrame frame_lokal;
    public javax.swing.JFrame frame_serverBeitreten;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    public javax.swing.JButton joinServer_b_ready;
    private javax.swing.JButton joinServer_button_joinServer;
    private javax.swing.JComboBox joinServer_combobox_anzahlSpieler;
    private javax.swing.JComboBox joinServer_combobox_gewinnfoto;
    private javax.swing.JComboBox joinServer_combobox_items;
    private javax.swing.JComboBox joinServer_combobox_necWins;
    private javax.swing.JComboBox joinServer_combobox_pausieren;
    private javax.swing.JComboBox joinServer_combobox_playerSpeed;
    private javax.swing.JComboBox joinServer_combobox_spielerPositionen;
    private javax.swing.JList joinServer_list_player;
    private javax.swing.JTextField joinServer_tf_port;
    private javax.swing.JTextField joinServer_tf_serverip;
    private javax.swing.JTextField joinServer_tf_spielername;
    public javax.swing.JToggleButton joinServer_toggleb_links;
    public javax.swing.JToggleButton joinServer_toggleb_rechts;
    private javax.swing.JTextField tf_name1;
    private javax.swing.JTextField tf_name2;
    private javax.swing.JTextField tf_name3;
    private javax.swing.JTextField tf_name4;
    private javax.swing.JTextField tf_name5;
    private javax.swing.JTextField tf_name6;
    private javax.swing.JTextField tf_name7;
    private javax.swing.JTextField tf_p1l;
    private javax.swing.JTextField tf_p1r;
    private javax.swing.JTextField tf_p2l;
    private javax.swing.JTextField tf_p2r;
    private javax.swing.JTextField tf_p3l;
    private javax.swing.JTextField tf_p3r;
    private javax.swing.JTextField tf_p4l;
    private javax.swing.JTextField tf_p4r;
    private javax.swing.JTextField tf_p5l;
    private javax.swing.JTextField tf_p5r;
    private javax.swing.JTextField tf_p6l;
    private javax.swing.JTextField tf_p6r;
    private javax.swing.JTextField tf_p7l;
    private javax.swing.JTextField tf_p7r;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
}
